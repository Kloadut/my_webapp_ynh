#!/bin/bash

# causes the shell to exit if any subcommand or pipeline returns a non-zero status
set -e

# Source YNH helpers
. /usr/share/yunohost/helpers

# This is a multi-instance app, meaning it can be installed several times independently
# The id of the app as stated in the manifest is available as $YNH_APP_ID
# The instance number is available as $YNH_APP_INSTANCE_NUMBER (equals "1", "2", ...)
# The app instance name is available as $YNH_APP_INSTANCE_NAME
#    - the first time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample
#    - the second time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample__2
#    - ynhexample__{N} for the subsequent installations, with N=3,4, ...
# The app instance name is probably what you are interested the most, since this is
# guaranteed to be unique. This is a good unique identifier to define installation path,
# db names, ...
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$(sudo yunohost app setting $app domain)
path=$(sudo yunohost app setting $app path)
is_public=$(sudo yunohost app setting $app is_public)

# Backup directory location for the app from where the script is executed and 
# which will be compressed afterward
backup_dir=$YNH_APP_BACKUP_DIR

# Remove trailing slash to path
path=${path%/}

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app \
  || die "The path ${domain}${path} is not available for app installation."

# Check destination directory
DESTDIR="/var/www/$app"
[[ -d $DESTDIR ]] && die \
"The destination directory '$DESTDIR' already exists.\
 You should safely delete it before restoring this app."

# Check configuration files
NGINX_CONF="/etc/nginx/conf.d/${domain}.d/${app}.conf"
[[ -f $NGINX_CONF ]] && die \
"The NGINX configuration already exists at '${NGINX_CONF}'.
 You should safely delete it before restoring this app."

PHP_FPM_CONF="/etc/php5/fpm/pool.d/$app.conf"
[[ -f $PHP_FPM_CONF ]] && die \
"The PHP FPM configuration already exists at '${PHP_FPM_CONF}'.
 You should safely delete it before restoring this app."

# Restore the app files
sudo cp -a ./www "$DESTDIR"

# Restore configuration files
sudo cp -a ./conf/nginx.conf "$NGINX_CONF"
sudo cp -a ./conf/php-fpm.conf "$PHP_FPM_CONF"

# Reload Services and regenerate SSOwat conf
sudo service nginx reload
sudo killall php5-fpm || echo "PHP-FPM already killed"
sudo service php5-fpm start
sudo yunohost app ssowatconf






#!/bin/bash
# This restore script is adapted to Yunohost >=2.4

# The parameter $1 is the backup directory location dedicated to the app
backup_dir=$1

# The parameter $2 is the id of the app instance ex: ynhexample__2
app=$2

# Get old parameter of the app
domain=$(sudo yunohost app setting $app domain)
path=$(sudo yunohost app setting $app path)
user=$(sudo yunohost app setting $app allowed_users)
is_public=$(sudo yunohost app setting $app is_public)

# Check domain/path availability
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    echo "There is already an app on this URL : $domain$path" | sudo tee /dev/stderr
    exit 1
fi

final_path=/var/www/$app
if [ -d $final_path ]; then
    echo "There is already a directory: $final_path " | sudo tee /dev/stderr
    exit 1
fi

conf=/etc/nginx/conf.d/$domain.d/$app.conf
if [ -f $conf ]; then
    echo "There is already a nginx conf file at this path: $conf " | sudo tee /dev/stderr
    exit 1
fi

phpconf=/etc/php5/fpm/pool.d/$app.conf
if [ -f $phpconf ]; then
    echo "There is already a php-fpm conf file at this path: $phpconf " | sudo tee /dev/stderr
    exit 1
fi


# Restore sources & data
sudo cp -a "${backup_dir}/var/www/$app" $final_path

# Set permissions
sudo chmod 775 -R $final_path/files
sudo chown -hR www-data:www-data $final_path/files

# Restore conf files
sudo cp -a "${backup_dir}/conf/nginx.conf" $conf
sudo cp -a "${backup_dir}/conf/php-fpm.conf" $phpconf
sudo chown root: $phpconf
sudo chmod 644 $phpconf


# Reload Nginx
sudo service nginx reload
sudo killall php5-fpm || echo "PHP-FPM already killed"
sudo service php5-fpm start

# Set ssowat config
if [ "$is_public" = "Yes" ];
then
    sudo yunohost app setting $app unprotected_uris -v "/"
fi
sudo yunohost app setting $app protected_uris -v "/admin"
sudo yunohost app ssowatconf
